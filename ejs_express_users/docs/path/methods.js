////////////////////////////////////////////////////////////////////////////////////////
// üü© methods
// 1Ô∏è‚É£ basename(path)-’® => ’≥’°’∂’°’∫’°÷Ä’∞’´ ’æ’•÷Ä’ª’´’∂ ’¥’°’Ω’®,
// 2Ô∏è‚É£ dirname(path)-’® => ’≥’°’∂’°’∫’°÷Ä’∞’´ ’§’´÷Ä’•’Ø’ø’∏÷Ä’´’°’µ’´ ’°’∂’æ’°’∂’∏÷Ç’¥’®
// 3Ô∏è‚É£ extname(path)-’® => ÷Ü’°’µ’¨’´ extension-’®
// 4Ô∏è‚É£ join([...path])-’® ’¥’´’°÷Å’∂’∏÷Ç’¥ ÷á ’∂’∏÷Ä’¥’°’¨’°÷Å’∂’∏÷Ç’¥ ’ß ’Ω’ø’°÷Å’æ’°’Æ ’∏÷Ç’≤’´’∂÷â
// 5Ô∏è‚É£ normalize(path)-’® ’Ø’°÷Ä’£’°’æ’∏÷Ä’∏÷Ç’¥ ’ß ¬´.. ’Ø’°’¥ ///¬ª ’∞’°’ø’æ’°’Æ’∂’•÷Ä.
// 6Ô∏è‚É£ relative(from, to)-’® => ’∞’°÷Ä’°’¢’•÷Ä’°’Ø’°’∂ ’≥’°’∂’°’∫’°÷Ä’∞’® from -> to
// 7Ô∏è‚É£ resolve([...paths])-’® !path segment ? current working directory-’´
// absolute path-’® : segment-’∂’•÷Ä’´÷Å absolute path
// 8Ô∏è‚É£ sep-’® ’°’∫’°’∞’∏’æ’∏÷Ç’¥ ’ß ’∞’°÷Ä’©’°’Ø’´’∂ (windows/linux/macOS) ’∞’°’ø’∏÷Ç’Ø ’∏÷Ç’≤’∏÷Ç ’∞’°’ø’æ’°’Æ’´ ’¢’°’™’°’∂’´’π (/\).
// 9Ô∏è‚É£ isAbsolute(path)-’® => true / false
// üîü format(pathObj) => ’£’•’∂’•÷Ä’°÷Å’∂’∏÷Ç’¥ ’ß path
// üü¶ parse(path) ’æ’•÷Ä’Æ’°’∂’∏÷Ç’¥ ’ß ÷Ü’°’µ’¨’´ path-’® => ÷Ö’¢’µ’•’Ø’ø
// üü¶ delimiter-’® ’°’∫’°’∞’∏’æ’∏÷Ç’¥ ’ß ’∞’°÷Ä’©’°’Ø’´’∂ (windows/linux/macOS) ’∞’°’ø’∏÷Ç’Ø ’∏÷Ç’≤’∏÷Ç ’Ω’°’∞’¥’°’∂’°’¶’°’ø’´’π.
////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////
// üü¶ __dirname => ’¢’°÷Å’°÷Ä’±’°’Ø ’≥’°’∂’°’∫’°÷Ä’∞’® ’§’•’∫’´ ’§’´÷Ä’•’Ø’ø’∏÷Ä’´’°
// üü¶ __filename => ’¢’°÷Å’°÷Ä’±’°’Ø ’≥’°’∂’°’∫’°÷Ä’∞’® ’§’•’∫’´ ÷Ü’°’µ’¨
////////////////////////////////////////////////////////////////////////////////////////

// Path ////////////////////////////////////////////////////////////////////////////////
// 1Ô∏è‚É£
// path.basename(__filename); => "server.js"
////////////////////////////////////////////////////////////////////////////////////////
// 2Ô∏è‚É£
// path.dirname(__filename); => C:\Users\arm00\Desktop\node
////////////////////////////////////////////////////////////////////////////////////////
// 3Ô∏è‚É£
// path.extname(__filename); => ".js"
////////////////////////////////////////////////////////////////////////////////////////
// 4Ô∏è‚É£
// path.join(__dirname, "src", "server.js"); => C:\Users\arm00\Desktop\node\src\server.js
////////////////////////////////////////////////////////////////////////////////////////
// 5Ô∏è‚É£
// path.normalize("C:\\temp\\\\foo\\bar\\..\\"); => "C:\\temp\\foo\\"
////////////////////////////////////////////////////////////////////////////////////////
// 6Ô∏è‚É£
// path.relative("C:\\orandea\\test\\aaa', 'C:\\orandea\\impl\\bbb"); => "..\\..\\impl\\bbb"
////////////////////////////////////////////////////////////////////////////////////////
// 7Ô∏è‚É£
////////////////////////////////////////////////////////////////////////////////////////
// 8Ô∏è‚É£
// On Windows, both the forward slash(/) and backward slash (\) are accepted as path segment
// separators; however, the path methods only add backward slashes(\).
////////////////////////////////////////////////////////////////////////////////////////
// 9Ô∏è‚É£
////////////////////////////////////////////////////////////////////////////////////////
// üîü
// "root" will be used if !"dir"
// "root" will be ignored if "dir" && "root" && "base"
// "name" && "ext" will be used if !"base"
//
// path.format({
//   root: '/ignored',
//   dir: '/home/user/dir',
//   base: 'file.txt',
// });
//
// path.format({
// 	root: "/",
// 	name: "file",
// 	ext: "ignored",
// });
////////////////////////////////////////////////////////////////////////////////////////
// üü¶
// path.parse("C:\\path\\dir\\file.txt");
// {
//   root: 'C:\\',
//   dir: 'C:\\path\\dir',
//   base: 'file.txt',
//   ext: '.txt',
//   name: 'file'
// }
//
////////////////////////////////////////////////////////////////////////////////////////
